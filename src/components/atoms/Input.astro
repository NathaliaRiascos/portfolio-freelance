---
interface Props extends astroHTML.JSX.InputHTMLAttributes {
  label: string;
  name: string;
  type?: astroHTML.JSX.HTMLInputTypeAttribute;
  class?: string;
}
const { class: className, name, label, type = "text", ...rest } = Astro.props;
---

<div class="flex w-full flex-col">
  {
    label ? (
      <label for={name} class="mb-1 text-sm font-medium">
        {label}
        {rest.required && "*"}
      </label>
    ) : null
  }
  <input
    id={name}
    class:list={[
      "file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground flex h-9 w-full min-w-0 rounded-md border border-gray-500 bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
      "focus-visible:border-primary focus-visible:ring-primary/50 focus-visible:ring-[3px]",
      "aria-invalid:ring-destructive/20 aria-invalid:border-destructive",
      className,
    ]}
    type={type}
    name={name}
    {...rest}
  />
  <span class="hidden text-sm text-red-600" data-error={name}></span>
</div>
